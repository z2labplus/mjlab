---
description: 
globs: 
alwaysApply: true
---
# 血战麻将项目规则 - 游戏规则

## 血战麻将核心规则

### 基本规则
- **牌局可3人胡牌** - 一个玩家胡牌后，牌局继续进行，直到三个人都胡牌或摸完所有手牌才结束
- **牌库限制** - 只包含3类麻将牌：万、筒、条，总共108张牌（每种牌4张）
- **操作限制** - 只能碰、杠，不能吃
- **杠牌即时得分** - 杠牌立刻得分，不等到胡牌
- **花色限制** - 手牌不超过2门花色，才能胡牌
- **缺牌规则** - 选择一门花色做为缺牌，摸到这门花色的牌一定要打出，对局中不可更改

### 牌面编码
```
万：1-9 (编码：1-9)
条：1-9 (编码：11-19)  
筒：1-9 (编码：21-29)
```

### 操作规则

#### 碰牌 (Peng)
- 当其他玩家打出一张牌时
- 自己手中有两张相同的牌
- 可以碰这张牌形成明刻

#### 杠牌 (Kong)
分为两种杠牌类型：

**1. 明杠 (Exposed Kong)**
- **直杠 (Direct Kong)** - 当其他玩家打出一张牌，自己手中有三张相同的牌时，可以杠这张牌
- **加杠 (Added Kong)** - 自己已经碰过一组牌（明刻），然后又摸到第四张相同的牌，可以加到碰牌上形成杠

**2. 暗杠 (Concealed Kong)**
- 手中有四张相同的牌，可以暗杠

#### 胡牌条件
1. **基本胡牌条件** - 符合基本的麻将胡牌牌型
2. **花色限制** - 手牌不超过2门花色
3. **缺牌规则** - 不能保留已选择缺的花色

### 算法实现要求

#### 牌型分析
- 实现胡牌检测算法
- 计算听牌状态和听牌类型
- 分析手牌的花色分布

#### 概率计算
- 基于剩余牌计算胡牌概率
- 考虑其他玩家的弃牌信息
- 使用蒙特卡洛方法进行概率模拟

#### 决策支持
- 智能弃牌建议
- 碰牌、杠牌时机分析
- 听牌策略优化

### 数据结构设计

#### 牌面表示
```python
# 牌的数字编码
SUITS = {
    'wan': range(1, 10),      # 万: 1-9
    'tiao': range(11, 20),    # 条: 11-19
    'tong': range(21, 30),    # 筒: 21-29
}

# 手牌结构
hand_cards = {
    'cards': [1, 2, 3, ...],  # 手牌列表
    'melds': [                # 明刻/明杠
        {'type': 'peng', 'cards': [1, 1, 1]},
        {'type': 'gang', 'cards': [2, 2, 2, 2]}
    ],
    'missing_suit': 'wan'     # 缺的花色
}
```

#### 游戏状态
```python
game_state = {
    'players': [              # 玩家信息
        {
            'id': 'player1',
            'hand': hand_cards,
            'discarded': [1, 2, 3],
            'hu_status': False
        }
    ],
    'deck': [1, 2, 3, ...],   # 剩余牌库
    'current_player': 0,      # 当前玩家
    'round_info': {
        'wind': 'east',
        'round_number': 1
    }
}
```

### 限制条件

#### 游戏流程限制
1. 必须按顺序摸牌、出牌
2. 杠牌后必须补牌
3. 胡牌后该玩家不再参与摸牌，但可以接受其他玩家的杠

#### 算法性能限制
1. 概率计算响应时间 < 500ms
2. 支持实时游戏状态更新
3. 内存使用优化，避免大量数据缓存

#### 用户体验限制
1. 操作提示必须清晰明确
2. 支持撤销功能（限定条件下）
3. 提供操作历史记录 